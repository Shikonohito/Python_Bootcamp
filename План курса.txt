29 ДЗ

(Считай урок это пара, 1:20)
Урок 01. Mystat. Microsoft Teams - Объясняем систему mystat и Microsoft Teams

Урок 02. Аппаратное обеспечение ПК - Немного погружаемся в историю создания компьютеров, рассказываем в общих чертах про аппаратное обеспечение ПК (CPU, GPU, Охлаждение CPU, RAM, HDD, SSD, Блок питания, Материнская плата, Корпус)

Урок 03. Программное обеспечение ПК - Рассказываем про иерархию Базовое ПО - Системное ПО - Служебное ПО - Прикладное ПО, рассказываем про BIOS и UEFI BIOS. На этом уроке проверяем, как студенты разбираются в компьютере. Для этого даём задачку на создание текстового документа, на создание скриншота экрана, на архивирование и разархивирование файлов. Выдаём ДЗшку на сборку компьютера по определённым условиям.

Урок 04. Общие сведения о сетях - Рассказываем про PAN, LAN, MAN, WAN, про интернет и WWW (в чём различия), про IP, TCP, UDP, про архитектуру клиент-сервер. Если время есть, про URL подробно можно и про HTTP.

Урок 05. Алгоритмы - Рассказываем про свойства алгоритмов, виды алгоритмов, способы записи, начинаем практику по составлению блок-схем и словесного алгоритма (я использую этот сайт: https://programforyou.ru/block-diagram-redactor). Выдаём ДЗшку на составление блок-схем и словесных алгоритмов.

Урок 06. Языки программирования - Гуглим популярные языки программирования (Tiobe Index, ещё по гитхабу популярные можно показать). Рассказываем про интерпретаторы и компиляторы, про высокоуровневые и низкоуровневые языки программирования, рассказываем про императивные, затем про объектно ориентированные. После этого даём полное определение Python, рассказываем про статическую и динамическую типизацию, сильную/строгую и слабую типизацию. В идеале на этом же уроке в конце показать, как скачать и установить Python и PyCharm.

Урок 07-09. Введение в Python
- Урок 7. Ввод и вывод
- Урок 8. Переменные и операции над ними
- Урок 9. Сокращённые формы записи операций. Практические задания

Урок 10-14. Операторы ветвлений
- Урок 10. Логические операторы. Оператор if
- Урок 11. Логические операторы. Операторы if-else
- Урок 12. Практика с логическими операторами
- Урок 13. Операторы if-elif-else
- Урок 14. Вложенные условные конструкции

Урок 15-20. Циклы
- Урок 15. Цикл while
- Урок 16. Управляющие операторы continue, break, else
- Урок 17. Цикл for
- Урок 18. Вложенные циклы
- Урок 19. Создание консольного меню - часть 1
- Урок 20. Создание консольного меню - часть 2

Урок 21-27. Строки. Списки
- Урок 21. Коллекция string
- Урок 22. Срезы. Экранирование. Форматирование строки
- Урок 23. Разборы задач по коллекции string
- Урок 24. Методы строк
- Урок 25. Коллекция list
- Урок 26. Операции над коллекцией list
- Урок 27. Вложенные списки

Урок 28-34. Функции. Модули
- Урок 28. Функции. Параметры. Аргументы. Возврат данных из функции
- Урок 29. Сигнатура функции. Виды передачи аргументов
- Урок 30. Области видимости. LEGB - если группа слабая, то про замыкание не рассказываем.

- Урок 31. Решение задач с использованием своих функций - если группа слабая.
- Урок 31. Функции как объекты первого класса - если группа сильная.

- Урок 32. Рекурсивные функции - если группа слабая.
- Урок 32. Рекурсивные функции. Функциональное программирование - если группа сильная.

Если группа слабая:
- Урок 33. Создание консольного приложения с использованием своих функций - часть 1
- Урок 34. Создание консольного приложения с использованием своих функций - часть 2

Если группа сильная:
- Урок 33. Карринг. Декораторы. Лямбда-выражения
- Урок 34. Решение задач с использованием своих функций - только практика на составление своих функций. Пытаемся отделить фронтенд и бэкенд. Бэкенд реализуем в виде функций, а на фронтенде просто их успользуем. Хорошо практиковаться на большой задаче, где требуется реализовать консольное меню.

Урок 35-36. Сортировка. Поиск
- Урок 35. Виды сортировок - объясняем и показываем, как работают сортировка выбором и быстрая сортировка. Выдаём задачу устную на быструю сортировку, решаем на доске. Для наглядности я использую сайт https://airtucha.github.io/SortVis/
- Урок 36. Виды поиска - рассказываем и показываем, как работают линейный поиск и бинарный поиск.

Урок 37-40. Кортежи. Множества. Словари
- Урок 37. Коллекции tuple и set
- Урок 38. Коллекция dict
- Урок 39. Работа со вложенными словарями - часть 1 - чисто практика, реализуем консольное приложение с разделением на фронтенд и бэкенд, составляем свои функции.
- Урок 40. Работа со вложенными словарями - часть 2

Урок 41. Исключения - если группа сильная. Просто рассказываем и показываем, можно решить несколько простых задачек.

Урок 41-48. ООП
- Урок 41. Введение в ООП. Поля и методы
- Урок 42. Создание и работа со своими классами
- Урок 43. Инкапсуляция. Спецификаторы доступа
- Урок 44. Решение задач с применением инкапсуляции
- Урок 45. Наследование. Переопределение методов - просто рассказываем про наследование и показываем реализацию, знания требуем, но не требуем, чтобы они могли реализовывать.
- Урок 46. Полиморфизм. Статические методы - просто рассказываем про полиморфизм, статические методы и показываем реализацию, знания требуем, но не требуем, чтобы они могли реализовывать.
- Урок 47. Агрегация. Композиция - рассказываем и показываем агрегацию и композицию, начинаем решать одну большую задачку на составление классов и их использование.
- Урок 48. Применение и использование агрегации - продолжаем решать задачку.

Урок 49-50. Разбор финальных проектов - объясняем как будут проходить экзамены, условия допуска до экзаменов, раздаём проекты, рассказываем про требования выполнения финальных проектов. На этом уроке выдаю ДЗшку на реализацию бэкенда их финального проекта. Требования к финальному проекту:
1. Определиться с финальным проектом. Выбрать из предложенного, либо свой вариант. Не игра, а сервисное приложение.
2. Должен быть рабочий бэкенд. Это значит должно быть ООП (абстракция - классы, поля и методы, применять инкапсуляцию), и используя его, можно составить приложение даже в консоли.
3. Реализованы добавление, поиск, изменение и удаление данных из базы данных.
4. В проекте происходит манипуляция с клиентами и товарами/услугами.
5. Должна быть возможность сохранить и загрузить базу данных в файлы.
6. Графическое приложение, а не консольное. Использовать Tkinter.
7. В Tkinter использовать несколько Frame, а не окна. Программа должна быть мультифреймовой, а не мультиоконной.
8. Реализация программы для сотрудника, но можно сделать дополнительно для клиента.
9. Tkinter не оформлять в виде ООП.

Урок 51-58. Tkinter
- Урок 51. Знакомство с Tkinter. Позиционирование. Виджеты Label, Entry, Button
- Урок 52. Операции над виджетом Listbox
- Урок 53. Использование ООП и Tkinter - часть 1 - показываем, как связать классы (бэкенд) с Tkinter. Если группа сильная-средняя, то отправляем студентам классы, чтобы вместе реализовывали фронтенд через Tkinter.
- Урок 54. Использование ООП и Tkinter - часть 2
- Урок 55. Использование виджетов Frame и Menu - часть 1 - показываем как переключать фреймы при использовании меню.
- Урок 56. Использование виджетов Frame и Menu - часть 2 - здесь я выдаю ДЗшку на реализацию фронтенда для своего финального проекта. Проверяю только связку фронтенда и бэкенда.
- Урок 57. Добавление картинок в Tkinter - рассказываем про оформление.
- Урок 58. Знакомство с некоторыми виджетами - показываем комбобоксы, спинбоксы, чекбаттоны, радиобаттоны, можно ещё тривью. Хорошо будет, если в своих ФП студенты будут использовать комбобоксы. Здесь я выдаю ДЗшку на оформление фронтенда для своего финального проекта. Проверяю только оформление фронтенда.

Урок 59-62. Файлы и установщик пакетов
- Урок 59. Работа с файлами
- Урок 60. Использование файлов в Tkinter - здесь я выдаю последнюю ДЗшку на реализацию сохранения и загрузки базы данных через фронтенд. Сюда они должны отправить итоговый вариант своего финального проекта. Проверяю только реализацию сохранения и загрузки.
- Урок 61. Установщик пакетов pip. Использование API - часть 1
- Урок 62. Установщик пакетов pip. Использование API - часть 2

Урок 63. Структуры данных - стек и очередь - чисто алгоритмы разбираем, реализовать это в Python невозможно, но можно симулировать эту реализацию.
Урок 64. Структуры данных - односвязный и двусвязный списки - чисто алгоритмы разбираем, реализовать это в Python невозможно, но можно симулировать эту реализацию.

Урок 65-66. Доработка финального проекта
Урок 67-68. Презентация финального проекта
Урок 69-70. Устный экзамен
Урок 71-72. Экзамен Cisco