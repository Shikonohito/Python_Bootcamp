Задание 1.
Реализовать следующее меню:
1. Показать всех пользователей
2. Добавить нового пользователя
3. Показать пользователя по его идентификатору
4. Изменить данные пользователя по его идентификатору
5. Удалить пользователя по его идентификатору
6. Завершить программу

При выборе пункта 2 сделать так, чтобы невозможно было добавить пользователя с идентификатором, который уже есть у какого-либо пользователя.
При выборе пунктов 3, 4, 5 сделать так, чтобы программа оповещала, если не нашла пользователя.
При выборе пункта 4 после ввода верного идентификатора, должна выводиться полная информация о пользователе,
а потом должно появляться следующее меню:
1. Изменить идентификатор
2. Изменить фамилию
3. Изменить имя
4. Изменить дату рождения
5. Добавить новую банковскую карточку
6. Изменить данные банковской карточки по идентификатору
7. Удалить банковскую карточку по идентификатору
8. Вернуться в главное меню

В этом меню при выборе 1-го пункта сделать так, чтобы невозможно было изменить идентификатор на тот, который уже есть у какого-либо пользователя.
При выборе 4-го пункта, программа запрашивает день, месяц, год. Если пользователь вводит пустые данные, то соответствующие данные пользователя не меняются.
При выборе пункта 5 сделать так, чтобы невозможно было добавить карточку с идентификатором, который уже есть у какой-либо карточки этого пользователя.
При выборе пункта 6 и 7 сделать так, чтобы программа оповещала, если не нашла карточку.
При выборе пункта 6 программа последовательно спрашивает данные карточки. Если пользователь вводит пустые данные, то соответствующие данные карточки не меняются.
При выборе пункта 8 программа должна показывать главное меню.
Программа завершается только в том случае, если выбран пункт 6 из главного меню.

Формат данных:
user_full_name = {"l_name": "Jackson", "f_name": "Tom"}
user_birth_date = {"day": 10, "month": 2, "year": 1994}
card_1 = {"id": "1234123412341234", "f_name": "Tom", "l_name": "Jackson",
          "month": 10, "year": 2026, "balance": 1500}
card_2 = {"id": "5869586958695869", "f_name": "Kate", "l_name": "Jackson",
          "month": 2, "year": 2025, "balance": 1050}
user_bank_cards = [card_1, card_2]
user = {"id": "1234ABC",
        "full_name": user_full_name,
        "birth_date": user_birth_date,
        "bank_cards": user_bank_cards}


Задание 2 (Необязательное).
На основе выполненного задания 1 реализуйте в главном меню "Поиск по имени", который будет показывать всех пользователей с указанным именем (ТОЛЬКО по имени).


Задание 3 (Необязательное) ***.
Для выполнения этого задания в самом верху вашего кода пропишите import datetime.
На основе выполненного задания 1 реализуйте в главном меню "Оформить подписку пользователю".
Перед реализации этой функции нужно условиться, что в структуру пользователя добавляется новая пара "subscription": user_sub_expiration_date.
Например:
user_sub_expiration_date = datetime.datetime.now()
user = {"id": "1234ABC",
        "full_name": user_full_name,
        "birth_date": user_birth_date,
        "bank_cards": user_bank_cards,
        "subscription": user_sub_expiration_date}

Также нужно изменить в главном меню добавление нового пользователя. Сделать так, чтобы новым пользователям в "subscription" выставлялось datetime.datetime.now().
Функция "Оформить подписку пользователю" должна сделать запрос на идентификатор пользователя. Если идентификатор неверный, то сообщает об этом.
Если идентификатор верный, то предлагается следующее меню:
1. Оформить подписку на 1 месяц
2. Оформить подписку на 3 месяца
3. Оформить подписку на 1 год
4. Вернуться в главное меню

При выборе пунктов 1-3 сперва проверяется, действует ли сейчас подписка. Для этого нужно сделать проверку datetime.datetime.now() > user_sub_expiration_date.
Если это условие верно, значит у пользователя нет подписки (текущая дата больше, чем прошлая дата).
Потом появляется запрос на ввод идентификатора карточки. Сделать проверку на то, что карточка есть у пользователя. Если карточка есть,
то должна происходить проверка баланса карточки на снятие денег. Стоимость подписок следующая:
- 1 месяц это 5 денег
- 3 месяца это 13 денег
- 1 год это 49 денег

После снятия денег с баланса карточки клиенту в "subscription" должно выставляться:
Для 1 месяца datetime.datetime.now() + datetime.timedelta(days=30)
Для 3 месяцев datetime.datetime.now() + datetime.timedelta(days=90)
Для 1 года datetime.datetime.now() + datetime.timedelta(days=365)