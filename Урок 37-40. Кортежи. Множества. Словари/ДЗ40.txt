Примечание:
Оформляйте ввод и вывод данных. Используйте только то, что было пройденно до этого урока включительно. Не используйте в условии оператор in. Не используйте готовые методы, только если в заданиях не говорится об использовании тех или иных методов. Можно использовать append(), split(), len(). Не используйте срезы.


Задание 40.1
Реализуйте следующее меню:
1. Показать всех пользователей
2. Показать пользователя по его идентификатору
3. Добавить нового пользователя
4. Изменить данные пользователя по его идентификатору
5. Удалить пользователя по его идентификатору
6. Завершить программу

Пользователь это словарь следующего вида:
{"user_id": "ИДЕНТИФИКАТОР", "f_name": "ИМЯ", "l_name": "ФАМИЛИЯ",
 "cards": [
                {"card_id": "ИДЕНТИФИКАТОР", "f_name": "ИМЯ", "l_name": "ФАМИЛИЯ", "month": <месяц>, "year": <год>, "balance": <баланс>},
                {"card_id": "ИДЕНТИФИКАТОР", "f_name": "ИМЯ", "l_name": "ФАМИЛИЯ", "month": <месяц>, "year": <год>, "balance": <баланс>},
                ...
          ]
}


Все пользователи хранятся в словаре вида:
["ИДЕНТИФИКАТОР": {пользователь}, "ИДЕНТИФИКАТОР": {пользователь}, ...]

При выборе пункта 1 (Показать всех пользователей) программа выводит в консоль данные всех пользователей в следующем формате:
"Идентификатор пользователя"
"Имя" "Фамилия"
"Идентификатор карточки" "Имя на карточке" "Фамилия на карточке" <месяц>/<год> <баланс>
"Идентификатор карточки" "Имя на карточке" "Фамилия на карточке" <месяц>/<год> <баланс>
...
=======================================================================================
"Идентификатор пользователя"
"Имя" "Фамилия"
"Идентификатор карточки" "Имя на карточке" "Фамилия на карточке" <месяц>/<год> <баланс>
"Идентификатор карточки" "Имя на карточке" "Фамилия на карточке" <месяц>/<год> <баланс>
...
=======================================================================================
...

Сперва можно реализовать пункт 2, чтобы потом использовать реализацию в пункте 1.

При выборе пункта 2 (Показать пользователя по его идентификатору) программа запрашивает с консоли идентификатор. Если идентификатор не найден, то программа сообщает об этом. В противном случае она выводит в консоль найденные данные пользователя в следующем формате:
"Идентификатор пользователя"
"Имя" "Фамилия"
"Идентификатор карточки" "Имя на карточке" "Фамилия на карточке" <месяц>/<год> <баланс>
"Идентификатор карточки" "Имя на карточке" "Фамилия на карточке" <месяц>/<год> <баланс>
...

При выборе пункта 3 (Добавить нового пользователя) программа запрашивает с консоли новый идентификатор пользователя, имя, фамилию, затем создаёт словарь из введённых данных. Список карт изначально пуст. После этого пользователь добавляется в список, если идентификатор нового пользователя не совпадает ни с одним идентификатором других пользователей. В противном случае программа должна сообщить об этом.
При выборе пункта 5 (Удалить пользователя по его идентификатору) программа запрашивает с консоли идентификатор пользователя и удаляет пользователя, если он была найден. В противном случае программа должна сообщить о проблеме.
При выборе пункта 4 (Изменить данные пользователя по его идентификатору) программа запрашивает с консоли идентификатор пользователя. Если идентификатор не найден, то программа сообщает об этом. В противном случае программа выводит в консоль следующее:
СТАРЫЕ ДАННЫЕ
"Идентификатор пользователя"
"Имя" "Фамилия"
"Идентификатор карточки" "Имя на карточке" "Фамилия на карточке" <месяц>/<год> <баланс>
"Идентификатор карточки" "Имя на карточке" "Фамилия на карточке" <месяц>/<год> <баланс>
...
=======================================================================================
НОВЫЕ ДАННЫЕ
"Идентификатор пользователя"
"Имя" "Фамилия"
"Идентификатор карточки" "Имя на карточке" "Фамилия на карточке" <месяц>/<год> <баланс>
"Идентификатор карточки" "Имя на карточке" "Фамилия на карточке" <месяц>/<год> <баланс>
...
=======================================================================================
1. Изменить идентификатор пользователя
2. Изменить фамилию
3. Изменить имя
4. Добавить карту
5. Изменить карту по идентификатору
6. Удалить карту по идентификатору
7. Подтвердить изменения и вернуться
8. Отменить изменения и вернуться


При выборе пунктов 1-3 программа запрашивает с консоли соответствующие данные. Изменения должны вносится только в том случае, если был выбран пункт 7. Поэтому пункты 1-6 должны изменять копию данных, а при выборе пункта 7 заменять оригинал.
При выборе пункта 7 программа должна проверить идентификатор изменённых данных. Если идентификатор не изменился или же совпадений с идентификаторами других пользователей нет, то старые данные заменяются на новые. В противном случае программа должна сообщить о проблеме.
При выборе пункта 4 (Добавить карту) программа запрашивает с консоли идентификатор карты, имя, фамилию, месяц, год, баланс, затем создаёт словарь из введённых данных. После этого карта добавляется в список, если идентификатор новой карты не совпадает ни с одним идентификатором других карт в списке. В противном случае программа должна сообщить об этом.
При выборе пункта 6 (Удалить карту по идентификатору) программа запрашивает с консоли идентификатор карты и удаляет карту, если она была найдена. В противном случае программа должна сообщить о проблеме.
При выборе пункта 5 (Изменить карту по идентификатору) программа запрашивает с консоли идентификатор карты. Если идентификатор не найден, то программа сообщает об этом. В противном случае программа выводит в консоль следующее:
СТАРЫЕ ДАННЫЕ: "Идентификатор карточки" "Имя на карточке" "Фамилия на карточке" <месяц>/<год> <баланс>
НОВЫЕ ДАННЫЕ: "Идентификатор карточки" "Имя на карточке" "Фамилия на карточке" <месяц>/<год> <баланс>
=======================================================================================
1. Изменить идентификатор карте
2. Изменить имя на карте
3. Изменить фамилию на карте
4. Изменить месяц
5. Изменить год
6. Изменить баланс
7. Подтвердить изменения и вернуться
8. Отменить изменения и вернуться

При выборе пунктов 1-6 программа запрашивает с консоли соответствующие данные. Изменения должны вносится только в том случае, если был выбран пункт 7. Поэтому пункты 1-6 должны изменять копию данных, а при выборе пункта 7 заменять оригинал.
При выборе пункта 7 программа должна проверить идентификатор изменённых данных. Если идентификатор не изменился или же совпадений с идентификаторами других карт нет, то старые данные заменяются на новые. В противном случае программа должна сообщить о проблеме.


Задание 40.2 (Необязательное)
На основе выполненного задания 40.1 реализуйте в главном меню "Поиск по имени", который запрашивает с консоли имя, а затем ищет всех пользователей с указанным именем (поиск ТОЛЬКО по имени) и выводит в консоль в том же виде, как делает пункт 1.


Задание 40.3 (Необязательное)
На основе выполненного задания 40.1 измените функционал добавления пользователей. При составлении словаря пользователя добавьте ещё одну пару "subscription": datetime.now().date(). Эта пара будет хранить дату истечения срока подписки. Затем добавьте и реализуйте в главном меню "Оформить подписку пользователю". При выборе этого пункта программа сперва запрашивает идентификатор пользователя. Если он найден, то выводится следующее:
Текущая дата: <значение_datetime.now().date()>
Дата окончания подписки: <значение_по_ключу_subscription>
1. Оформить подписку на 1 месяц
2. Оформить подписку на 3 месяца
3. Оформить подписку на 1 год
4. Вернуться в главное меню

При выборе пунктов 1-3 программа выводит в консоль курс подписки и список карт пользователя в виде:
Подписка на 1 месяц - 5 единиц
Подписка на 3 месяца - 13 единиц
Подписка на 1 год - 49 единиц
=======================================================================================
"Идентификатор карточки" "Имя на карточке" "Фамилия на карточке" <месяц>/<год> <баланс>
"Идентификатор карточки" "Имя на карточке" "Фамилия на карточке" <месяц>/<год> <баланс>
...

Затем программа запрашивает ввод с консоли идентификатора карточки для оплаты. Если идентификатор карты найден и достаточно денег, то деньги снимаются с баланса карты. Затем проверяется, что если datetime.now() больше <значение_по_ключу_subscription>, то по ключу "subscription" выставляются следующие данные:
- Для 1 месяца: datetime.now() + timedelta(days=30)
- Для 3 месяцев: datetime.now() + timedelta(days=90)
- Для 1 года: datetime.now() + timedelta(days=365)

Если же datetime.now() меньше-равно <значение_по_ключу_subscription>, то по ключу "subscription" выставляются следующие данные:
- Для 1 месяца: <значение_по_ключу_subscription> + timedelta(days=30)
- Для 3 месяцев: <значение_по_ключу_subscription> + timedelta(days=90)
- Для 1 года: <значение_по_ключу_subscription> + timedelta(days=365)

Не забудьте в самом начале программы прописать строку from datetime import datetime, timedelta.


Задание 40.4 (Необязательное)
Попробуйте переделать задание 40.1 так, чтобы работала следующая схема:
Пусть есть 2 разных пользователя. У первого пользователя привязана карта "5869586958695869" с балансом 1000. У второго пользователя привязана точно такая же карта. Если изменить баланс у первого пользователя, то мы сможем увидеть, что у второго пользователя баланс карты тоже изменился. Чтобы работало так, измените добавление и изменение. С технической точки зрения у этих пользователей должен быть привязан один и тот же объект карты.