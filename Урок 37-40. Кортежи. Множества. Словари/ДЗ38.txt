Примечание:
Оформляйте ввод и вывод данных в соответствии с примерами заданий. Используйте только то, что было пройденно до этого урока включительно. Не используйте в условии оператор in. Не используйте готовые методы, только если в заданиях не говорится об использовании тех или иных методов. Можно использовать .append(), .split(), len(). Не используйте срезы.


Задание 38.1
Напишите функцию find_occurrences, которая принимает кортеж строк и последовательность символов. Затем функция добавляет в список строку, в которую входит последовательность символов. В конце функция превращает список в кортеж и возвращает его.
ПРИМЕР
Кортеж: ("banana", "apple", "bananamango", "mango", "strawberry-banana")
Последовательность символов: "ban"
Результат работы функции: ("banana", "bananamango", "strawberry-banana")

ПОДСКАЗКИ
1. Код и алгоритм поиска последовательности символов мы рассматривали на 24-м уроке.


Задание 38.2
В магазине "Всё Не Дорого" запустили акцию по розыгрышу дорогой электроники. Для этого пользователи должны были вписать свою почту на сайте и нажать кнопку "Участвовать". В итоге собрался список почт, однако, если пользователь несколько раз вписывал одну и ту же почту и снова нажимал кнопку "Участвовать", то данные снова добавлялись в список. Более того, программа принимала любые строки, поэтому в списке есть мусорные данные. Напишите функцию check_mails, которая принимает список строк, удаляет дубликаты, проверяет правильность почты и возвращает кортеж из строк, которые прошли проверку. Почта считается правильной, если строка содержит символ "@", после которого идёт символ ".", но не сразу.
Пример правильной почты: <хотя_бы_один_символ>@<хотя_бы_один_символ>.<хотя_бы_один_символ>


Задание 38.3
Напишите программу, которая запрашивает с консоли имена пользователей первого приложения через пробел, затем на следующей строке запрашивает с консоли имена пользователей второго приложения через пробел. Программа должна вывести в консоль следующие данные:
- Имена пользователей обоих приложений
- Имена пользователей только первого приложения
- Имена пользователей только второго приложения
- Имена всех пользователей


Задание 38.4
Реализуйте следующее меню:
1. Показать данные всех баскетболистов
2. Показать только имена всех баскетболистов
3. Найти рост по имени баскетболиста
4. Добавить нового баскетболиста
5. Удалить баскетболиста по имени
6. Изменить рост по имени
7. Завершить программу

Данные баскетболистов хранятся в виде одного словаря, в котором ключи являются именами, а значения - рост:
{"Jack": 153, "Tom": 223, ...}.

При выборе пункта 1 программа выводит в консоль имя и рост в следующем виде:
"Имя" - <рост>
"Имя" - <рост>
...

При выборе пункта 2 программа выводит в консоль имена в одну строку:
"Имя", "Имя", ...
Учтите, что при выводе в консоль имён, в конце не должно быть пробела.

При выборе пункта 3 программа запрашивает с консоли имя и выводит её в консоль. Если такого имени нет, то программа должна об этом сообщить.
При выборе пункта 4 программа запрашивает с консоли новое имя и рост, затем добавляет пару в словарь. Если такое имя уже существует, то программа должна об этом сообщить.
При выборе пункта 5 программа запрашивает с консоли имя и удаляет баскетболиста. Если такого имени нет, то программа должна об этом сообщить.
При выборе пункта 6 программа запрашивает с консоли имя. Если такое имя есть, то программа запрашивает с консоли рост и меняет её у баскетболиста.


Задание 38.5
Реализуйте следующее меню:
1. Показать все книги
2. Добавить новую книгу
3. Найти книгу по идентификатору книги
4. Изменить информацию по идентификатору книги
5. Удалить книгу по идентификатору книги 
6. Завершить программу

Данные о книге хранятся в виде словаря с ключами "book_id", "title", "author", "genre", "release_year".
Все книги хранятся в списке. Изначально список книг пустой.

При выборе пункта 1 программа выводит в консоль книги в следующем виде:
"Идентификатор" "Название" "Автор" "Жанр" <год>
"Идентификатор" "Название" "Автор" "Жанр" <год>
...

При выборе пункта 2 программа запрашивает с консоли идентификатор, название книги, имя автора, жанр и год выпуска, затем формирует из него словарь. После этого книга добавляется в список, если идентификатор новой книги не совпадает ни с одним идентификатором других книг. В противном случае программа должна сообщить об этом.

При выборе пункта 3 программа запрашивает с консоли идентификатор книги, затем выводит в консоль данные книги, если они найдены. Данные выводятся в следующем виде:
"Идентификатор" "Название" "Автор" "Жанр" <год>

При выборе пункта 4 программа запрашивает с консоли идентификатор книги. Если книга с таким идентификатором найдена, то программа выводит в консоль следующее:
Старые данные: "Идентификатор" "Название" "Автор" "Жанр" <год>
Новые данные: "Идентификатор" "Название" "Автор" "Жанр" <год>
1. Изменить идентификатор
2. Изменить название книги
3. Изменить имя автора
4. Изменить жанр
5. Изменить год выпуска
6. Подтвердить изменения и вернуться
7. Отменить изменения и вернуться

При выборе пунктов 1-5 программа запрашивает с консоли соответствующие данные. Изменения должны вносится в словарь только в том случае, если был выбран пункт 6. Поэтому пункты 1-5 должны изменять копию данных, а при выборе пункта 6 заменять оригинал.
При выборе пункта 6 программа должна проверить идентификатор изменённых данных. Если идентификатор не изменился или же совпадений с идентификаторами других книг нет, то старые данные заменяются на новые. В противном случае программа должна сообщить о проблеме.

В главном меню при выборе пункта 5 программа запрашивает с консоли идентификатор. Если идентификатор найден, то программа удаляет книгу. В противном случае программа должна сообщить о проблеме.

ДОПОЛНИТЕЛЬНО:
1. Попытайтесь разделить программу на фронтенд и бэкенд. Для этого создайте разные функции. Помните, что во фронтенд помещается логика ввода, проверки ввода и его преобразование, а также вывод. В бэкенд помещается вся остальная логика - поиск, добавление, удаление, изменение, формирование данных для вывода и подобные операции.

2. Переделайте программу так, чтобы книги хранились не в списке, а в словаре, где ключём является идентификатор книги, а значением - книга как словарь. При этом в самой книге уберите ключ "book_id". Итоге должна получиться следующая структура:
{"Идентификатор": {"title": "Название", "author": "Имя", "genre": "Жанр", "release_year": <год>},
 "Идентификатор": {"title": "Название", "author": "Имя", "genre": "Жанр", "release_year": <год>},
 ...}
 Вместе с этим переделайте операции вывода книг, поиска, добавления, изменения и удаления книг.