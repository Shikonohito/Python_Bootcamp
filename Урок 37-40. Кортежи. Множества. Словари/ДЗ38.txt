Примечание:
Оформляйте ввод и вывод данных в соответствии с примерами заданий. Используйте только то, что было пройденно до этого урока включительно. Не используйте в условии оператор in. Не используйте готовые методы, только если в заданиях не говорится об использовании тех или иных методов. Можно использовать .append(), .split(), len(), .sort(). Не используйте срезы.
ПЕРЕСМОТРЕТЬ!!!

Задание 1.
Есть некоторый кортеж данных, например (banana, apple, bananamango, mango, strawberry-banana). Пользователь вводит название.
Программа должна найти точное совпадение и вывести индексы найденных элементов.
ВВОД: banana
ВЫВОД: 0
В противном случае вывести, что такого элемента нет. Можете создать свою функцию или использовать уже готовые методы.


Задание 2.
Есть некоторый кортеж данных, например (banana, apple, bananamango, mango, strawberry-banana). Пользователь вводит название.
Программа должна найти вхождения названия в элементы и вывести индексы найденных элементов. Например:
ВВОД: banana
ВЫВОД: 0, 2, 4
В противном случае вывести, что такого элемента нет. Можете создать свою функцию или использовать уже готовые методы.


Задание 3.
Пользователь вводит имена на каждой строке до тех пор, пока не введёт "END". Программа должна вывести только уникальные имена.


Задание 4.
Пользователь на первой строке вводит через пробел имена клиентов, которые пользуются первым приложением.
Далее на второй строке пользователь точно так же вводит имена клиентов, которые пользуются вторым приложением.
Программа должна определить:
- какие клиенты пользуются обоими приложениями
- какие клиенты пользуются ТОЛЬКО первым приложением
- какие клиенты пользуются ТОЛЬКО вторым приложением
- какие вообще есть клиенты


Задание 5.
Программа предлагает пользователю выбор:
1. Показать данные всех баскетболистов
2. Показать только имена всех баскетболистов
3. Найти рост по имени баскетболиста
4. Добавить нового баскетболиста
5. Удалить баскетболиста по имени
6. Изменить рост по имени
7. Завершить программу
Реализуйте весь функционал этого меню. Словарь должен быть в виде {"Jack": 153, "Tom": 223, ...}.
Для пункта 3 сделайте так, чтобы программа оповещала, если введённого имени нет.
Для пункта 4 сделайте так, чтобы нельзя было добавить баскетболиста, имя которого уже есть в словаре.
Для пункта 5 сделайте так, чтобы нельзя было удалить баскетболиста по несуществующему имени.
Для пункта 6 сделайте так, чтобы нельзя было изменить рост баскетболиста по несуществующему имени.


Задание 6.
Программа предлагает пользователю выбор:
1. Показать все книги
2. Добавить новую книгу
3. Найти книгу по идентификатору
4. Изменить информацию по идентификатору книги
5. Удалить книгу по идентификатору книги 
6. Завершить программу
Реализуйте весь функционал этого меню. 
Книга это словарь с ключами "book_id", "name", "author", "genre", "release_year".
Все книги должны храниться в списке. Изначально список книг пустой.
Для пункта 2 сделайте так, чтобы невозможно было добавить книгу, book_id которой уже есть в списке книг.
Для пункта 4 сделайте так, чтобы программа показывала меню:
1. Изменить идентификатор
2. Изменить имя
3. Изменить автора
4. Изменить жанр
5. Изменить год выпуска
6. Вернуться в главное меню
В этом случае для пункта 1 сделайте так, чтобы невозможно было изменить идентификатор книги на тот,
который уже используется для какой-либо книги в списке.