Практическое Задание 43.1
Создайте класс "Task". Этот класс должен хранить поля для названия, описания, статуса ("выполнена"/"не выполнена"") и приоритета (1-9).
Для класса определите строковое представление, конструктор и свойства.
Для класса определите методы повышения и понижения приоритета.
Для класса определите методы смены статуса на выполнена и не выполнена.

Создайте класс "TaskManager". Этот класс должен хранить поле для списка задач.
Для класса определите конструктор.
Для класса определите методы добавления, поиска (получить список с фильтром по выполненным/не выполненным, приоритету), изменения и удаления задач.


Практическое Задание 43.2
Используя классы из Практического Задания 43.1, реализуйте следующее меню:
1. Показать все задачи
2. Показать задачу по номеру в списке
3. Показать задачи по критерию
4. Добавить задачу
5. Изменить задачу
6. Удалить задачу
7. Завершить программу

При выборе пункта 1 программа показывает в консоли все задачи в виде:
<номер_задачи_из_списка> "Название" "(выполнена/не выполнена)" - <приоритет>
"Описание"
============================================================================
<номер_задачи_из_списка> "Название" "(выполнена/не выполнена)" - <приоритет>
"Описание"
============================================================================
...

При выборе пункта 2 программа запрашивает с консоли номер задачи и показывает в консоли задачу по номеру в виде:
<номер_задачи_из_списка> "Название" "(выполнена/не выполнена)" - <приоритет>
"Описание"

При выборе пункта 3 программа запрашивает с консоли статус (0 - любой, 1 - выполнена, 2 - не выполнена) и приоритет (0 - любой, 1-9 приоритеты). Затем выводит в консоль в виде:
<номер_задачи_из_списка> "Название" "(выполнена/не выполнена)" - <приоритет>
"Описание"
============================================================================
<номер_задачи_из_списка> "Название" "(выполнена/не выполнена)" - <приоритет>
"Описание"
============================================================================
...

При выборе пункта 4 программа запрашивает с консоли название, описание и приоритет. Затем формирует объект "Task" и добавляет в объект "TaskManager".

При выборе пункта 6 программа запрашивает с консоли номер задачи. Если задача найдена, то удаляет её.

При выборе пункта 5 программа запрашивает номер задачи. Если задача найдена, то выводит следующее:
СТАРЫЕ ДАННЫЕ:
<номер_задачи_из_списка> "Название" "(выполнена/не выполнена)" - <приоритет>
"Описание"

НОВЫЕ ДАННЫЕ:
<номер_задачи_из_списка> "Название" "(выполнена/не выполнена)" - <приоритет>
"Описание"
============================================================================
1. Изменить название
2. Изменить описание
3. Изменить приоритет
4. Сменить статус
5. Подтвердить изменения и вернуться
6. Отменить изменения и вернуться

При выборе пунктов 1-3 программа запрашивает с консоли соответствующие данные. Изменения должны вносится только в том случае, если был выбран пункт 5. Поэтому пункты 1-3 должны изменять копию данных, а при выборе пункта 5 заменять оригинал.
При выборе пункта 5 программа должна заменить старые данные на новые.
При выборе пункта 4 программа сменяет статус с "выполнена" на "не выполнена" и наоборот в другом случае.