Задание 31.1
Задание на список функций.


# Задание 14 - напишите программу, которая считывает строку чисел через пробел и по выбору
#              пользователя находит сумму, разность или произведение этих чисел.
#              Создать следующие функции:
#              data_input() - запрашивает ввод чисел через пробел, формирует из них список ЦЕЛЫХ чисел,
#              возвращает полученный список.
#              show_menu() - выводит на экран выбор, запрашивает ввод выбора, возвращает этот ввод.
#              make_choice(num_list, choice) - в зависимости от выбора запускает определённую функцию. Возвращает
#              результат выбора.
#              make_sum(num_list) - вычисляет сумму чисел в списке. Возвращает результат.
#              make_dif(num_list) - вычисляет разность чисел в списке. Возвращает результат.
#              make_prod(num_list) - вычисляет произведение чисел в списке. Возвращает результат.


# Задание 15 - напишите функцию, которая проверяет, насколько надёжен пароль. Создайте следующие
#              функции:
#              password_strength(password) - ничего не возвращает. Вызывает check_password() и в
#              зависимости от полученного от него числа выводит в консоль надёжность пароля.
#              Числа следующие:
#              0 - Небезопасный, 1 - Очень слабый, 2 - Слабый,
#              3 - Средний, 4 - Сильный, 5 - Безопасный
#              check_password(password) - возвращает число от 0 до 5 включительно. Вызывает все
#              указанные ниже функции.
#              check_len(password) - возвращает 1, если длина пароля от 8 символов и выше. В противном
#              случае возвращает 0.
#              check_low_alpha(password) - возвращает 1, если пароль содержит маленькие буквы. В противном
#              случае возвращает 0.
#              check_big_alpha(password) - возвращает 1, если пароль содержит большие буквы. В противном
#              случае возвращает 0.
#              check_digit(password) - возвращает 1, если пароль содержит цифры. В противном
#              случае возвращает 0.
#              check_symbol(password) - возвращает 1, если пароль содержит хотя бы один из символов
#              "!@#$%^&*_-". В противном случае возвращает 0.

# Задание 16 - создайте функцию, которая проверяет на чётность переданное число или же на знак.
#              Сигнатура этой функции должна быть следующая:
#              check_value(value, func_to_call)
#              value - число, которое нужно проверить
#              func_to_call - функция для проверки на четность или же на знак.

# Задание 17 - создайте функцию, которая определяет максимум или минимум среди списка в зависимости
#              от выбора пользователя. Сигнатура этой функции должна быть следующая:
#              find(num_list, func_to_call)
#              num_list - список чисел
#              func_to_call - функция для нахождения максимума или функция для нахождения минимума

# Задание 18 - создайте функцию, которая "готовит блюда" по выбранным рецептам.
#              Сигнатура этой функции должна быть следующая:
#              cook(func_to_call)
#              func_to_call - функция "готовки блюд"