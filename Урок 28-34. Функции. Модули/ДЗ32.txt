Примечание:
Используйте только то, что было пройденно до этого урока включительно. Не используйте в условии оператор in. Не используйте готовые методы, только если в заданиях не говорится об использовании тех или иных методов. Не используйте срезы.


Задание 32.1
На работе у Teston Lebra произошёл наплыв ботов, из-за чего появилось много фейковых аккаунтов. В этой системе аккаунт это список следующего вида:
["Логин", "Пароль", "Имя", "Фамилия", <баланс_аккаунта_в_виде_числа>, "Идентификатор", <статус>, "Дата"]

Напишите следующие функции:
1. check_user(account, deep_check)
Принимает аккаунт в виде списка и значение True или False. Вызывает функцию get_check_list, передав ей deep_check, сохраняет её результат в check_list, проходится по функциям из полученного списка и вызывает их, передав account. Если хоть одна из функций вернёт False, то дальнейшие проверки прерываются. Если проверки были прерваны, то check_user должен вернуть False. В противном случае должен вернуть True.

2. get_check_list(deep_check)
Принимает значение True или False. Если принял True, то помещает в список все функции, указанные ниже. В противном случае помещает в список только функции check_id, check_ban и check_balance.

3. check_password(account)
Принимает аккаунт в виде списка, проверяет пароль. Если он пустой, то возвращает False. В противном случае возвращает True.

4. check_name(account)
Принимает аккаунт в виде списка, проверяет имя и фамилию. Если они состоят только из символов алфавита, то возвращает True. В противном случае возвращает False.

5. сheck_balance(account)
Принимает аккаунт в виде списка, проверяет баланс. Если он меньше нуля или больше 25000, то возвращает False. В противном случае возвращает True.

6. check_id(account)
Принимает аккаунт в виде списка, проверяет идентификатор. Если длина идентификатора не равна 8-и символам, то возвращает False. В противном случае возвращает True.

7. сheck_ban(account)
Принимает аккаунт в виде списка, проверяет правильность бана. Если в статусе стоит False, а дата не пустая, то возвращает False. Также возвращает False, если в статусе True, а дата пустая. В противном случае возвращает True.

ПОДСКАЗКИ
1. Для проверки имени и фамилии используйте метод .isalpha(). Этот метод возвращает True, если строка состоит только из символов алфавита, и False в противном случае.
2. Для тестирования можете использовать следующий код:
account_list = [
    ["root", "5869", "Teston", "Lebra", 15000, "LeTeston", False, ""],
    ["jane_doe", "", "Jane", "Doe", 50.25, "78901283", False, ""],
    ["admin", "admin", "admin", "admin", 999999, "admin999", True, "2024-04-25"],
    ["not_imposter", "qwerty12345", "not_imposter", "Олег", 10.75, "13570092", False, ""],
    ["hskfskt34i2", "amjq35hfg", "gkasbmdgae", "beeef45asd", 0.0, "90876504", False, ""],
    ["superuser", "superpass123", "Super", "User", 500.75, "246810", False, ""],
    ["guest", "guestpass", "Guest", "User", 0.0, "10101010", True, ""],
    ["poweruser", "powerpass", "Power", "User", 100.0, "12121212", False, "2024-04-22"]
]

for account in account_list:
    print(check_user(account, True))  # True, False, False, False, False, False, False, False
print()
for account in account_list:
    print(check_user(account, False))  # True, True, False, True, True, False, False, False


Задание 32.2
Создайте рекурсивную функцию, которая вычисляет сумму чисел списка.
ПОДСКАЗКА
1. Функция принимает список чисел и количество чисел.


Задание 32.3
Teston Lebra написал код, который зашифровывает текст по ключу. Переделайте код так, чтобы переменные input_str, key_str, key_digits_str, key_int, encrypted_str не использовались вообще, а сама программа занимала одну строчку. Функции изменять не нужно. Также оставьте максимально подробные комментарии по работе функций - что принимают, что используют для своей работы, как работают, что возвращают.
КОД:
from sys import maxunicode

def alpha_to_num(obj_str: str):
    return "".join(symb if symb.isdigit() else str(ord(symb)) for symb in obj_str)


def encrypt_str(obj_str: str, key: int):
    return "".join(chr((ord(symb) - ord('a') + key) % (maxunicode + 1) + ord('a')) for symb in obj_str)


input_str = input("Введите строку для зашифрования: ")
key_str = input("Введите ключ шифрования: ")
key_digits_str = alpha_to_num(key_str)
key_int = int(key_digits_str)
encrypted_str = encrypt_str(input_str, key_int)
print(encrypted_str)