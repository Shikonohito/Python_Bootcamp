Примечание:
Используйте только то, что было пройденно до этого урока включительно. Не используйте в условии оператор in. Не используйте готовые методы, только если в заданиях не говорится об использовании тех или иных методов. Методы format(), split() и append() использовать можно. Не используйте срезы.


Задание 30.1
Напишите функцию generate_password, которая принимает необязательную длину (по умолчанию 8) и 3 необязательных параметра (по умолчанию False), которые принимают только True или False - содержит цифры, заглавные буквы, специальные символы. Функция должна сформировать строку пароля по указанным параметрам и вернуть её.
ПОДСКАЗКА
1. Решение можете взять из ДЗшки 22.8.


Задание 30.2
Напишите функцию convert_seconds, которая принимает секунды и необязательный символ (по умолчанию "m"). Функция должна перевести секунды и вернуть результат. Переводы зависят от необязательного символа:
- Если символ "m", то перевод в минуты
- Если символ "h", то перевод в часы
- Если символ "d", то перевод в дни


Задание 30.3
Напишите функцию find_str_index, которая принимает строку, символ и необязательный индекс (по умолчанию 0). Функция должна вернуть индекс первого вхождения символа в строку, начиная поиск с указанного индекса. Если индекс не найден, то функция должна вернуть -1.


Задание 30.4
Напишите функцию users_expiration_check, которая принимает список пользователей и необязательные количество дней как число (по умолчанию 30) и режим как строку (по умолчанию "safe"). Функция должна найти всех пользователей, у которых число дней с последнего захода больше, чем указано, и действовать в зависимости от режима:
- safe: не изменяет список пользователей, возвращает список из найденных индексов пользователей
- pop: добавляет найденного пользователя в новый список, удаляет из списка пользователей, возвращает новый список
- remove: удаляет из списка пользователей найденных пользователей, возвращает пустой список

Структура списка пользователей:
[
 ["Login", "Password", <число_дней_с_последнего_захода>],
 ["Login", "Password", <число_дней_с_последнего_захода>],
 ["Login", "Password", <число_дней_с_последнего_захода>],
 . . . . . . . . . . . . .
]


Задание 30.5
Измените указанный ниже код так, чтобы функции перестали использовать глобальную переменную.
КОД:
student_list = list()


def show_students():
    for student in student_list:
        print(student[0], student[1])


def get_student_index(name: str):
    found_index = -1
    for i in range(len(student_list)):
        if name == student_list[i][0]:
            found_index = i
            break
    return found_index


def get_student(name: str):
    found_student = None
    index = get_student_index(name)
    if index != -1:
        found_student = student_list[index]
    return found_student


def add_student(new_student: list):
    is_success = False
    new_student_name = new_student[0]
    index = get_student_index(new_student_name)
    if index == -1:
        student_list.append(new_student)
        is_success = True
    return is_success


def change_student(new_student: list, index: int):
    is_success = False
    found_index = get_student_index(new_student[0])
    if found_index == -1 and 0 <= index and index < len(student_list):
        student = student_list[index]
        if new_student[0] != "":
            student[0] = new_student[0]
        if new_student[1] != "":
            student[1] = new_student[1]
        is_success = True
    return is_success


def remove_student(index: int):
    is_success = False
    if 0 <= index and index < len(student_list):
        del student_list[index]
        is_success = True
    return is_success


while True:
    print("1. Показать студентов")
    print("2. Найти индекс студента по имени")
    print("3. Найти студента по имени")
    print("4. Добавить студента")
    print("5. Изменить студента по индексу")
    print("6. Удалить студента по индексу")
    print("7. Завершить программу")

    choice = input("Выберите действие: ")
    if choice == "1":
        show_students()
        print("==================================")
    elif choice == "2":
        name = input("Введите имя: ")
        found_index = get_student_index(name)
        if found_index == -1:
            print(f"Студента с именем {name} не существует.")
        else:
            print(f"Студент {name} найден по индексу {found_index}.")
        print("==================================")
    elif choice == "3":
        name = input("Введите имя: ")
        found_student = get_student(name)
        if found_student:
            print(f"Имя: {found_student[0]}\t\tВозраст: {found_student[1]}")
        else:
            print(f"Студент с именем {name} не найден.")
        print("==================================")
    elif choice == "4":
        new_student_name = input("Введите имя нового студента: ")
        new_student_age = int(input("Введите возраст нового студента: "))
        new_student = [new_student_name, new_student_age]
        if add_student(new_student):
            print(f"{new_student_name} был добавлен в список.")
        else:
            print("Такое имя уже присутствует.")
        print("==================================")
    elif choice == "5":
        index = int(input("Введите индекс: "))
        new_student_name = input("Введите имя нового студента: ")
        new_student_age = input("Введите возраст нового студента: ")
        if new_student_age != "":
            new_student_age = int(new_student_age)
        new_student = [new_student_name, new_student_age]
        if change_student(new_student, index):
            print("Данные студента были изменены.")
        else:
            print("Изменения отклонены. Возможно Вы указали неверный индекс или имя студента уже есть в списке.")
        print("==================================")
    elif choice == "6":
        index = int(input("Введите индекс: "))
        if remove_student(index):
            print("Студент был удалён.")
        else:
            print("Студент не был найден.")
        print("==================================")
    elif choice == "7":
        print("==================================")
        print("Программа завершается.")
    else:
        print("Неверный ввод. Пожалуйста, выберите пункт из меню.")


Задание 30.6 (Необязательное)
Измените исходный код из Задания 30.5 таким образом, чтобы student_list перестал быть глобальной переменной, используя замыкание.