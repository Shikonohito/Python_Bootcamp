Примечание:
Оформляйте ввод и вывод данных в соответствии с примерами заданий. Используйте только то, что было пройденно до этого урока включительно. Не используйте оператор in в условиях.

Задание 12.1
В компании, где работает Teston Lebra, все сотрудники имеют балл производительности от 1 до 99 включительно. Напишите программу, которая запрашивает с консоли балл и выводит в консоль категорию.
Категории следующие:
- "A": более 90 баллов.
- "B": От 80 до 90 баллов включительно.
- "C": От 70 до 79 баллов включительно.
- "D": От 60 до 69 баллов включительно.
- "E": От 50 до 59 баллов.
- "F": Менее 50 баллов.
ПРИМЕР
ВВОД:
Введите количество баллов: 87

ВЫВОД:
Категория "B".


Задание 12.2
Teston Lebra попросили переписать свой прототип программы входа по логину и паролю. Программа должна выводить в консоль "Вход выполнен успешно.", если логин - "admin", а пароль - "5869" или же логин - "root", а пароль - "1002". В противном случае программа должна выводить в консоль "Неверный логин или пароль.". Напишите программу, которая запрашивает с консоли логин и пароль, а затем выводит в консоль ответ.
ПРИМЕР:
ВВОД:
Введите логин: root
Введите пароль: 1002

ВЫВОД:
Вход выполнен успешно.


Задание 12.3
Магазин "Всё Не Дорого" ввёл новую политику к своим клиентам. Клиенты, которые выполнили определённые условия, получают бонус. Условия для получения бонуса следующие:
- Клиент должен быть участником бонусной программы или совершить покупку на сумму более 300.
- Покупка должна быть совершена в рабочий день, за исключением случаев, когда сумма покупки превышает ещё более высокий порог в сумму 1000, что позволяет получить бонус также и в выходные.
- Клиент не должен иметь неоплаченных задолженностей.
Напишите программу, которая запрашивает с консоли подтверждение участника, сумму покупки, подтверждение рабочего дня, наличие задолжности, а затем выводит в консоль "Клиент может получить бонус." или "Клиент не выполнил условия для получения бонуса.".
ПРИМЕР
ВВОД:
Клиент является участником бонусной программы (Y/N): N
Сумма покупки: 1200
Сегодня рабочий день (Y/N): N
Клиент имеет задолжности (Y/N): N

ВЫВОД:
Клиент может получить бонус


Задание 12.4
Teston Lebra поручили разработать прототип программы для управления доступом к файлам в системе. Каждый файл имеет свой уровень конфиденциальности, а у пользователей есть различные уровни доступа. Условия для доступа следующие:
- Пользователь должен иметь права администратора или быть создателем файла.
- Уровень конфиденциальности файла должен быть ниже или равен уровню доступа пользователя.
- Файл не должен быть заблокирован.
Напишите программу, которая запрашивает с консоли подтверждение прав администратора, подтверждение создателя файла, уровень конфиденциальности, уровень доступа, подтверждение блокирования файла, затем выводит в консоль "Доступ разрешён." или "Доступ запрещён." в зависимости от условий.
ПРИМЕР
ВВОД:
Права администратора присутствуют (Y/N): Y
Вы создатель файла (Y/N): N
Уровень конфиденциальности: 5
Уровень доступа: 5
Файл заблокирован (Y/N): N

ВЫВОД:
Доступ разрешён.


Задание 12.5
Teston Lebra написал программу для того, чтобы определять, подходит ли человек для проведения собеседования или нет. Человека можно звать на собеседование, если выполняются следующие критерии:
- Человеку больше 21 года
- Опыт работы 24 и более месяцев
- При наличии сертификата опыт работы может быть от 12 и более месяцев
Программа корректно не работает. Исправьте программу так, чтобы она работала корректно, и рядом напишите комментарии о том, почему изменённый вариант должен работать верно.
КОД:
has_21 = input("Человеку больше 21 года (Y/N): ")
exp_month = input("Опыт работы (в месяцах): ")
has_certificate = input("Имеется сертификат (Y/N): ") 
print()

is_accepted = has_21 = "Y" and exp_month >= 24 or exp_month >= 12 and has_certificate = "Y"
if is_accepted:
    print("Можно позвать на собеседование.")
else:
    print("Человек не подходит по критериям.")

ВВОД:
Человеку больше 21 года (Y/N): N
Опыт работы (в месяцах): 36
Имеется сертификат (Y/N): Y

ВЫВОД:
Можно позвать на собеседование.


Задание 12.6
Teston Lebra попросили написать программу, которая запрашивает с консоли процент вероятности дождя и выводит в консоль словесную интепретацию. Интерпретация следующая:
- Низкая вероятность: до 30% включительно.
- Умеренная вероятность: от 31% до 60% включительно.
- Высокая вероятность: от 61% до 80% включительно.
- Очень высокая вероятность: от 81% и выше.
Программа в целом работает, но иногда некорректно. Исправьте программу так, чтобы она работала корректно, и рядом напишите комментарии о том, почему изменённый вариант должен работать верно.
КОД:
rain_probability = float(input("Введите процентную вероятность дождя: "))

if rain_probability <= 30:
    print("Низкая вероятность дождя.")
if 31 <= rain_probability and rain_probability <= 60:
    print("Умеренная вероятность дождя.")
if 61 <= rain_probability and rain_probability <= 80:
    print("Высокая вероятность дождя.")
else:
    print("Очень высокая вероятность дождя.")

ВВОД:
Введите процентную вероятность дождя: 31.5

ВЫВОД:
Умеренная вероятность дождя.


Задание 12.7
Teston Lebra написал программу, которая запрашивает с консоли средний балл студента, имеются ли долги и рекомендации у студента, возраст студента, затем выводит в консоль "Студент может получить стипендию." или "Студент не может получить стипендию." в зависимости от критериев. Критерии подсказал ему преподаватель кафедры дискретной математики. Критерии следующие:
- Средний балл студента от 80 и выше или средний балл от 80 и выше, но при этом возраст студента больше 21 и нет долгов или же возраст студента от 21 и меньше и нет долгов
- Нет долгов, при этом есть рекомендация или нет долгов
- Средний балл студента от 80 и выше или же ниже 80
Программа хоть и работает верно, но другой преподаватель отметил, что условие можно упростить. Упростите условие этой программы.
КОД:
avg_rating = int(input("Введите средний балл студента: "))
student_age = int(input("Введите возраст студента: "))
has_debt = input("Студент сдал экзамены с долгами (Y/N): ") == "N"
has_recomendation = input("Студент имеет рекомендацию (Y/N): ") == "Y"

condition = avg_rating >= 80 or (avg_rating >= 80 and ((student_age > 21 and not has_debt) or (student_age <= 21 and not has_debt))) and (not has_debt and (has_recomendation or not has_debt) and (avg_rating >= 80 or avg_rating < 80))

if condition:
    print("Студент может получить стипендию.")
else:
    print("Студент не может получить стипендию.")

ВВОД:
Введите средний балл студента: 85
Введите возраст студента: 18
Студент сдал экзамены с долгами (Y/N): N
Студент имеет рекомендацию (Y/N): N

ВЫВОД:
Студент может получить стипендию.