Примечание:
Оформляйте ввод и вывод данных в соответствии с примерами заданий. Используйте только то, что было пройденно до этого урока включительно. Не используйте в условии оператор in. Не используйте готовые методы, только если в заданиях не говорится об использовании тех или иных методов. Не используйте срезы.

Задание 22.1
Напишите программу, которая запрашивает с консоли строку с примером, проверяет правильность использования скобок и затем она выводит в консоль "Открывающих скобок больше, чем закрывающих.", "Закрывающих скобок больше, чем открывающих." или "Скобки расставлены верно.".
ПРИМЕР
ВВОД:
Введите строку примера: 2 + (10 - 5 - (2 + 10)

ВЫВОД:
Открывающих скобок больше, чем закрывающих.


Задание 22.2
Напишите программу, которая запрашивает с консоли строку и выводит в консоль на каждой новой строке предложение до точки включительно.
ПРИМЕР
ВВОД:
Введите строку: abc. def. hij.

ВЫВОД:
abc.
def.
hij.


Задание 22.3
Напишите программу, которая запрашивает с консоли арифметическое выражение вида <число><операция><число>, затем выводит в консоль результат выражения. В качестве операции может быть +, -, *, /.
ПОДСКАЗКИ
1. Сперва выделите левое число в одну переменную, операцию в другую, правое число в третью. Затем числа приведите к типу int.

ПРИМЕР
ВВОД:
Введите арифметическое выражение: 23+12

ВЫВОД:
Ответ: 35


Задание 22.4
Напишите программу, которая запрашивает с консоли текст в одну строку и выводит в консоль количество предложений. С точки зрения пунктуации, предложение оформляется в конце точкой, восклицательным, вопросительным знаками или многоточием.
ПОДСКАЗКИ
1. Для подсчёта точек проверяйте сразу две позиции. Например, если по индексу i находится точка, то проверяем по индексу i + 1. Если и на ней находится точка, то ничего не делаем. В противном случае увеличиваем счётчик предложений. Учтите, что в этом случае нужно проверять с индекса 0 до "размера строки - 1".

ПРИМЕР
ВВОД:
Введите текст: abc? defg! hij... klm.

ВЫВОД:
Количество предложений: 4


Задание 22.5
Напишите программу, которая запрашивает с консоли от кого, кому, тему и сообщение, затем выводит в консоль форматированный текст. Используйте переменную, в котором будет находиться форматированный текст, и format() или f-строки. Команда вывода должна быть одна.
ПРИМЕР
ВВОД:
Введите кому сообщение: Teston Lebra
Введите от кого сообщение: Иван Иванов
Введите сообщение: Вы уволены.

ВЫВОД:
Кому: Teston Lebra
======================
Вы уволены.
======================
С уважением, Иван Иванов.


Задание 22.6
Напишите программу, которая запрашивает с консоли строку азотистых оснований из первых больших и маленьких букв - А/а (Аденин), Г/г (Гуанин), Ц/ц (Цитозин), Т/т (Тимин), а затем выводит в консоль сколько каждого из них.
ПРИМЕР
ВВОД:
Введите строку азотистых оснований: аГцТАЦгтАат

ВЫВОД:
Количество Аденина: 4
Количество Гуанина: 2
Количество Цитозина: 2
Количество Тимина: 3


Задание 22.7
Напишите программу, которая запрашивает с консоли строку и заменяет подряд идущие символы на этот же символ и количество повторений, затем выводит в консоль новую строку.
ПОДСКАЗКИ
1. Рассматривайте пару символов - текущий и предыдущий символ. Для этого создайте переменную, которая в самом конце цикла копирует текущий индекс.

ПРИМЕР
ВВОД:
Введите строку для сжатия: abbcccddddeeeeea

ВЫВОД:
Сжатая строка: a1b2c3d4e5a1


Задание 22.8
Напишите программу, которая генерирует пароли. Программа сперва должна задать ряд вопросов, затем в зависимости от ответов создать 5 паролей и вывести их в консоль.
ПОДСКАЗКИ
1. Создайте одну переменную, которая будет выступать в качестве набора символов, которые будут добавляться в пароль. Изначально в этой переменной должны быть символы "abcdefghijklmnopqrstuvwxyz". Если пароль должен содержать цифры, то добавляйте к нему строку "0123456789". Если заглавные английские буквы, то "ABCDEFGHIJKLMNOPQRSTUVWXYZ". Если специальные символы, то "!@#$%&*_-+=?".

2. Генерируйте случайное число от 0 до размера набора символов. Полученное число будет индексом символа из набора символов. Используйте следующий код для генерации числа:
from random import randint  # Подключение модуля random и импорт функции randint

randint(start, end)  # Использование функции для генерации одного числа от start до end включительно

ПРИМЕР
ВВОД:
Введите длину пароля: 8
Пароль должен содержать цифры (Y/N): Y
Пароль должен содержать заглавные английские буквы (Y/N): Y
Пароль должен содержать специальные символы (Y/N): Y

ВЫВОД:
Сгенерированный пароль (1): Mqe0DodL
Сгенерированный пароль (2): 9mnWk7o1
Сгенерированный пароль (3): L2Chtula
Сгенерированный пароль (4): ?VfF!U7Q
Сгенерированный пароль (5): F@6bQvS3


Задание 22.9
Teston Lebra попросили определить "текст" молекул ДНК по хэшам. Напишите программу, которая перебирает все возможные комбинации молекул ДНК, вычисляет их хэши и выводит в консоль найденные последовательности ДНК.
Хэши следующие:
fbfe4047a78675e30b3e6664392e308c83d5b7692180048db3652abad7cd19d4
b10ca0c7df6eea471a995c343bbf6acecb979f7fa9f91b6ce7f4e6b0825e1825
6037fa5f8f5312a8cca2a0a8a5f88395531e84d82deff50bae3f4e46360bfbc2
774ef38ec143565fcc12bad7161b596d2ede50110333857e777a2ac3fce07e9c
23f3b5a428129da00e3d3cb03812318104c9ccc8fe7562974719ec63db85f39e

Известно, что размер "текста" молекул ДНК составляет 10 символов и этот "текст" состоит из заглавных символов "А", "Г", "Ц" и "Т". Программа должна выводить в формате <хэш> = <текст>.
ПОДСКАЗКИ:
1. Вводить ничего не нужно. Ваша программа должна перебирать возможные комбинации и определять их хэши. Если хэши совпадают с искомыми, то нужно выводить последовательность ДНК.
2. Создайте переменную, которая будет хранить набор символов "АГЦТ".
3. Создайте 5 переменных для каждого хэша.
4. По структуре программа должна состоять из цикла while, внутри которого находится цикл for, внутри которого находится цикл for, внутри которого находится цикл for и т.д. В итоге должен получится внешний цикл while и 10 вложенных циклов for по принципу матрёшки. Цикл while должен прекратиться, когда было обнаружено 5 хэшов. Циклы for должны перебирать числа от 0 до 3 включительно, чтобы с помощью этих чисел перебирать символы из "АГЦТ".
5. В самом начале цикла while обнуляйте строку.
6. Каждый следующий цикл for должен брать копию строки от предыдущего цикла и добавлять к копии символ из "АГЦТ":
while ...:
    dna_str = ""
    for ... in range(...):
        dna_first = dna_str
        ...
        for ... in range(...):
            dna_second = dna_first
            ...
            for third_symb in range(4):
                dna_third = dna_second
                ...

7. Для вычисления хэша используйте следующий код:
from hashlib import sha256  # Подключение модуля hashlib и импорт функции sha256

dna_test = "АГТЦАГТЦАГ"  # Исходный текст
dna_test_utf_8 = dna_test.encode("utf-8")  # Кодируем данные в utf-8
dna_hash_obj = sha256(dna_test_utf_8)  # Создаём объект, в котором будет хэш данных
dna_hash = dna_hash_obj.hexdigest()  # Преобразуем объект-хэш в шестнадцатеричный формат

print(dna_hash)  # Для проверки работы
